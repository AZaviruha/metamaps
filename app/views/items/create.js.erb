$('#new_item').fadeOut('fast');
$('#item_name').data().autocomplete.term = null;
$('.ui-autocomplete').children().remove();
$('.ui-autocomplete').css('display','none');
$('#item_name').attr('value','');

if(viewMode == "graph") {
	  var newnode = <%= @item.self_as_json.html_safe %>;
      var x = <%= @position['x'] %>;
      var y = <%= @position['y'] %>;
      
		
		if (Mconsole != null) {
      Mconsole.graph.addNode(newnode);
      
      // set the animation for everything back to normal
      Mconsole.graph.eachNode( function (n) {
        n.setData('dim', 25, 'start');
			  n.setData('dim', 25, 'end');
      });
      var temp = Mconsole.graph.getNode('<%= @item.id %>');
			temp.setData('dim', 1, 'start');
			temp.setData('dim', 40, 'end');
      
      if (gType == "centered") {
        temp.setPos(new $jit.Polar(5.54, 347.6), 'current');
			  temp.setPos(new $jit.Polar(5.54, 347.6), 'start');
			  temp.setPos(new $jit.Polar(5.54, 347.6), 'end');
      }
      else if (gType == "arranged" || gType == "chaotic") {
        temp.setData('xloc',0);
        temp.setData('yloc',0);
        temp.setData('mappingid', '<%= @mapping.id %>');
        temp.setPos(new $jit.Complex(x, y), 'current');
        temp.setPos(new $jit.Complex(x, y), 'start');
        temp.setPos(new $jit.Complex(x, y), 'end');s
      }
      
			Mconsole.fx.plotNode(temp, Mconsole.canvas);
			Mconsole.fx.animate({  
				modes: ['node-property:dim'],  
				duration: 400  
			  });
		 }
		 else {
			json = newnode;
			initialize("chaotic");
		 }
}
else {
	$('#cards').prepend('<%= escape_javascript(render(@item)) %>');
	$(".scroll").mCustomScrollbar(); 
}